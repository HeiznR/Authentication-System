services:
  db:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - app_network
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nestapp:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nestjs-container
    env_file:
      - ./backend/.env.stage.dev
    command: npm run start:dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend/src:/app/src
    depends_on:
      - db
    networks:
      - app_network
    restart: always

  reactapp:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-container
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - nestapp
      - db
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: {}
